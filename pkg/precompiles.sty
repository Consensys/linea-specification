% SHAKIRA
\newcommand{\selectorKeccakRes}                   {\col{SELECTOR\_KECCAK\_RES}}
\newcommand{\selectorShaTwoRes}                   {\col{SELECTOR\_SHA2\_RES}}
\newcommand{\selectorRipemdRes}                   {\col{SELECTOR\_RIPEMD\_RES}}

% EC_DATA
\newcommand{\ecdataId}                  {\col{ID}}
\newcommand{\ecdataIndex}               {\col{\index}}
\newcommand{\ecdataLimb}                {\col{\limb}}
\newcommand{\ecdataTotalSize}           {\col{TOTAL\_SIZE}}
\newcommand{\ecdataPhase}               {\col{PHASE}}
\newcommand{\ecdataSuccessBit}          {\col{SUCCESS\_BIT}}
%
\newcommand{\indexMaxEcrecoverData}          {\texttt{INDEX\_MAX\_ECRECOVER\_DATA}}
\newcommand{\indexMaxEcaddData}              {\texttt{INDEX\_MAX\_ECADD\_DATA}}
\newcommand{\indexMaxEcmulData}              {\texttt{INDEX\_MAX\_ECMUL\_DATA}}
\newcommand{\indexMaxEcPairingDataMin}       {\texttt{INDEX\_MAX\_ECPAIRING\_DATA\_MIN}}
\newcommand{\indexMaxEcrecoverResult}        {\texttt{INDEX\_MAX\_ECRECOVER\_RESULT}}
\newcommand{\indexMaxEcaddResult}            {\texttt{INDEX\_MAX\_ECADD\_RESULT}}
\newcommand{\indexMaxEcmulResult}            {\texttt{INDEX\_MAX\_ECMUL\_RESULT}}
\newcommand{\indexMaxEcpairingResult}        {\texttt{INDEX\_MAX\_ECPAIRING\_RESULT}}
%
\newcommand{\ctMaxSmallPoint}                {\texttt{CT\_MAX\_SMALL\_POINT}}
\newcommand{\ctMaxLargePoint}                {\texttt{CT\_MAX\_LARGE\_POINT}}
%
\newcommand{\totalSizeEcrecoverData}{\texttt{TOTAL\_SIZE\_ECRECOVER\_DATA}}
\newcommand{\totalSizeEcaddData}{\texttt{TOTAL\_SIZE\_ECADD\_DATA}}
\newcommand{\totalSizeEcmulData}{\texttt{TOTAL\_SIZE\_ECMUL\_DATA}}
\newcommand{\totalSizeEcpairingDataMin}{\texttt{TOTAL\_SIZE\_ECPAIRING\_DATA\_MIN}}
\newcommand{\totalSizeEcrecoverResult}{\texttt{TOTAL\_SIZE\_ECRECOVER\_RESULT}}
\newcommand{\totalSizeEcaddResult}{\texttt{TOTAL\_SIZE\_ECADD\_RESULT}}
\newcommand{\totalSizeEcmulResult}{\texttt{TOTAL\_SIZE\_ECMUL\_RESULT}}
\newcommand{\totalSizeEcpairingResult}{\texttt{TOTAL\_SIZE\_ECPAIRING\_RESULT}}
%
\newcommand{\gms}                       {\col{STAMP}} % Generic Module Stamp
\newcommand{\addressLo}                 {\col{ADDR\_LO}}
\newcommand{\ecRecover}                 {\col{ECRECOVER}\flag}
\newcommand{\ecAdd}                     {\col{ECADD}\flag}
\newcommand{\ecMul}                     {\col{ECMUL}\flag}
\newcommand{\ecPairing}                 {\col{ECPAIRING}\flag}
%
\newcommand{\locIsEcrecover}            {\col{is\_ecrecover}}
\newcommand{\locIsEcadd}                {\col{is\_ecadd}}
\newcommand{\locIsEcmul}                {\col{is\_ecmul}}
\newcommand{\locIsEcpairing}            {\col{is\_ecpairing}}
%
\newcommand{\isEcrecoverData}           {\col{IS\_ECRECOVER\_DATA}\flag}
\newcommand{\isEcrecoverResult}         {\col{IS\_ECRECOVER\_RESULT}\flag}
\newcommand{\isEcaddData}               {\col{IS\_ECADD\_DATA}\flag}
\newcommand{\isEcaddResult}             {\col{IS\_ECADD\_RESULT}\flag}
\newcommand{\isEcmulData}               {\col{IS\_ECMUL\_DATA}\flag}
\newcommand{\isEcmulResult}             {\col{IS\_ECMUL\_RESULT}\flag}
\newcommand{\isEcpairingData}           {\col{IS\_ECPAIRING\_DATA}\flag}
\newcommand{\isEcpairingResult}         {\col{IS\_ECPAIRING\_RESULT}\flag}
%
\newcommand{\totalPairings}             {\col{TOTAL\_PAIRINGS}}
\newcommand{\accPairings}               {\col{ACC\_PAIRINGS}}
\newcommand{\limb}                      {\col{LIMB}}

% \renewcommand{\comp}                    {\col{COMP}}
\newcommand{\fail}                      {\col{FAIL}}
\newcommand{\eqn}                       {\col{EQN}}
\newcommand{\evenOdd}                   {\col{EVENODD}}
\newcommand{\inputsAreValid}            {\col{VALID\_INPUTS}}
\newcommand{\isOnCurve}                 {\col{IS\_ON\_CURVE}}
\newcommand{\midCycle}                  {\col{MIDCYCLE}}
\newcommand{\comparisons}               {\col{COMPARISONS}}
\newcommand{\equalities}                {\col{EQUALITIES}}
\newcommand{\hurdle}                    {\col{HURDLE}}
\newcol{\internalChecksPassed}          {ICP}{INTERNAL\_CHECKS\_PASSED}
\newcommand{\ctMin}                     {\col{CT\_MIN}}
\newcommand{\allChecksPassed}           {\col{ALL\_CHECKS\_PASSED}}
\newcommand{\returnData}                {\col{RETURN\_DATA}}
\newcommand{\ecdsaRecoverPassed}        {\col{ECDSA\_RECOVER\_PASSED}}

\newcommand{\cyclicCol}[1]              {\col{CYC\_#1}}

\newcommand{\wcpArgOneHi}                         {\col{WCP\_ARG1\_HI}}
\newcommand{\wcpArgOneLo}                         {\col{WCP\_ARG1\_LO}}
\newcommand{\wcpArgTwoHi}                         {\col{WCP\_ARG2\_HI}}
\newcommand{\wcpArgTwoLo}                         {\col{WCP\_ARG2\_LO}}
\newcommand{\wcpInst}                             {\col{WCP\_INST}}
\newcommand{\wcpRes}                              {\col{WCP\_RES}}

\newcommand{\extArgOneLo}                         {\col{EXT\_ARG1\_LO}}
\newcommand{\extArgOneHi}                         {\col{EXT\_ARG1\_HI}}
\newcommand{\extArgTwoLo}                         {\col{EXT\_ARG2\_LO}}
\newcommand{\extArgTwoHi}                         {\col{EXT\_ARG2\_HI}}
\newcommand{\extArgThreeLo}                       {\col{EXT\_ARG3\_LO}}
\newcommand{\extArgThreeHi}                       {\col{EXT\_ARG3\_HI}}
\newcommand{\extInst}                             {\col{EXT\_INST}}
\newcommand{\extResLo}                            {\col{EXT\_RES\_LO}}
\newcommand{\extResHi}                            {\col{EXT\_RES\_HI}}

\newcommand{\ecCycleMax}                          {\redm{11}}
\newcommand{\ecCycleMed}                          {\redm{7}}
\newcommand{\ecCycleMin}                          {\redm{5}}
\newcommand{\notOnGTwo}                           {\col{NOT\_ON\_G2}}
\newcommand{\notOnGTwoAcc}                        {\col{NOT\_ON\_G2\_ACC}}
\newcommand{\notOnGTwoAccMax}                     {\col{NOT\_ON\_G2\_ACC\_MAX}}
\newcommand{\isInfinity}                          {\col{IS\_INFINITY}}
\newcommand{\selector}                            {\col{sel}}
\newcommand{\bnOuterPrime}                        {\texttt{P\_BN}}
\newcommand{\secpN}                               {\texttt{SECP256K1N}}
\newcommand{\bnOuterPrimeHi}                      {\bnOuterPrime\texttt{\_HI}}
\newcommand{\bnOuterPrimeLo}                      {\bnOuterPrime\texttt{\_LO}}
\newcommand{\secpNHi}                             {\secpN\texttt{\_HI}}
\newcommand{\secpNLo}                             {\secpN\texttt{\_LO}}

\newcommand{\bnOuterPrimeHex}                     {\texttt{0x\,30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47}}
\newcommand{\bnOuterPrimeHexHi}                   {\texttt{0x\,30644e72e131a029b85045b68181585d}}
\newcommand{\bnOuterPrimeHexLo}                   {\texttt{0x\,97816a916871ca8d3c208c16d87cfd47}}

\newcommand{\secpNHex}                            {\texttt{0x\,fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f}}
\newcommand{\secpNHexHi}                          {\texttt{0x\,ffffffffffffffffffffffffffffffff}}
\newcommand{\secpNHexLo}                          {\texttt{0x\,fffffffffffffffffffffffefffffc2f}}

% Recently added columns
\newcommand{\isSmallPoint}              {\col{IS\_SMALL\_POINT}}
\newcommand{\isLargePoint}              {\col{IS\_LARGE\_POINT}}

\newcol{\membershipTestRequired}        {G2MTR}{G2\_MEMBERSHIP\_TEST\_REQUIRED}
\newcol{\acceptablePairOfPoints}        {ACCPC}{ACCEPTABLE\_PAIR\_OF\_POINTS\_FOR\_PAIRING\_CIRCUIT}
\newcol{\csEcrecover}                   {CS\_ECRECOVER}{CIRCUIT\_SELECTOR\_ECRECOVER}
\newcol{\csEcadd}                       {CS\_ECADD}{CIRCUIT\_SELECTOR\_ECADD}
\newcol{\csEcmul}                       {CS\_ECMUL}{CIRCUIT\_SELECTOR\_ECMUL}
\newcol{\csEcpairing}                   {CS\_ECPAIRING}{CIRCUIT\_SELECTOR\_ECPAIRING}
\newcol{\csGTwo}                        {CS\_G2\_MEMBERSHIP}{CIRCUIT\_SELECTOR\_G2\_MEMBERSHIP}
\newcol{\trivialPairing}             {TRIVIAL\_PAIRING}{OVERALL\_TRIVIAL\_PAIRING}

% System of constraints
\newcommand{\callCOneMembership}             {\texttt{callToC1Membership}}

\newcommand{\callToCOneMembership}[6]{
    \callCOneMembership_{#1}
    \left[ \begin{array}{ll}
            \utt{Rel. row offset:}        & #2       \\
            \utt{First argument (high):}  & \col{#3} \\
            \utt{First argument (low):}   & \col{#4} \\
            \utt{Second argument (high):} & \col{#5} \\
            \utt{Second argument (low):}  & \col{#6} \\
        \end{array} \right]}

\newcommand{\callCOneMembershipWCP}             {\texttt{callToC1MembershipWCP}}

\newcommand{\callToCOneMembershipWCP}[6]{
    \callCOneMembershipWCP_{#1}
    \left[ \begin{array}{ll}
            \utt{Rel. row offset:}        & #2       \\
            \utt{First argument (high):}  & \col{#3} \\
            \utt{First argument (low):}   & \col{#4} \\
            \utt{Second argument (high):} & \col{#5} \\
            \utt{Second argument (low):}  & \col{#6} \\
        \end{array} \right]}

\newcommand{\callCOneMembershipEXT}             {\texttt{callToC1MembershipEXT}}

\newcommand{\callToCOneMembershipEXT}[6]{
    \callCOneMembershipEXT_{#1}
    \left[ \begin{array}{ll}
            \utt{Rel. row offset:}        & #2       \\
            \utt{First argument (high):}  & \col{#3} \\
            \utt{First argument (low):}   & \col{#4} \\
            \utt{Second argument (high):} & \col{#5} \\
            \utt{Second argument (low):}  & \col{#6} \\
        \end{array} \right]}

\newcommand{\callWellFormedCoordinates}             {\texttt{callToWellFormedCoordinates}}

\newcommand{\callToWellFormedCoordinates}[9]{ % TODO: a standard macro cannot have more than 9 arguments, thus here 'i' is hardcoded: use xkeyval
    \callWellFormedCoordinates_{i}
    \left[ \begin{array}{ll}
            \utt{Rel. row offset:}        & #1       \\
            \utt{First argument (high):}  & \col{#2} \\
            \utt{First argument (low):}   & \col{#3} \\
            \utt{Second argument (high):} & \col{#4} \\
            \utt{Second argument (low):}  & \col{#5} \\
            \utt{Third argument (high):}  & \col{#6} \\
            \utt{Third argument (low):}   & \col{#7} \\
            \utt{Fourth argument (high):} & \col{#8} \\
            \utt{Fourth argument (low):}  & \col{#9} \\
        \end{array} \right]}

% base 10 : 21888242871839275222246405745257275088696311157297823662689037894645226208583
% base 16 : 30644E72E131A029B85045B68181585D97816A916871CA8D3C208C16D87CFD47
% high part : 30644e72e131a029b85045b68181585d
% low part : 97816a916871ca8d3c208c16d87cfd47
\newcommand{\ttx}                 {\texttt{x}}
\newcommand{\tty}                 {\texttt{y}}
%\newcommand{}{\col{}}
%\newcommand{}{\col{}}
\newcommand{\PRECOMPILESUCCEDES}              {\col{PRECOMPILE\_SUCCEDES}}
\newcommand{\precompileSuccedes}              {\col{PREC\_SUCC}}
\newcommand{\PRECOMPILEPROVIDESRETURNDATA}    {\col{PRECOMPILE\_PROVIDES\_RETURNDATA}}
\newcommand{\precompileProvidesReturndata}    {\col{PREC\_PRVD}}
\newcommand{\PRECOMPILETOUCHESRAM}            {\col{PRECOMPILE\_TOUCHES\_RAM}}
\newcommand{\precompileTouchesRam}            {\col{PREC\_TCHR}}
\newcommand{\PRECOMPILERDS}                   {\col{PRECCOMPILE\_RETURNDATASIZE}}
\newcommand{\precompileRds}                   {\col{PREC\_RDS}}

\newcommand{\sendToRamSum}              {\miscSignifier\col{MMU\_INST\_SUM}}  % weighted sum of the RAM instruction flag for CALLs
\newcommand{\sendToRam}                 {\miscSignifier\col{MMU\_INST}}       % binary column which indicates which rows contain RAM instructions


% obsolete ?
\newcommand{\mmuInstInstruction}        {\miscSignifier\mmuMod\col{/INST}}
\newcommand{\mmuInstRamToRam}           {\texttt{RamToRam}}
\newcommand{\mmuInstRamToExo}           {\texttt{RamToExo}}
\newcommand{\mmuInstExoToRam}           {\texttt{ExoToRam}}
\newcommand{\mmuInstStkToRam}           {\texttt{StkToRam}}
\newcommand{\mmuInstRamToStk}           {\texttt{RamToStk}}
\newcommand{\mmuInstSrcOffset}          {\miscSignifier\mmuMod\col{/SOURCE\_OFFSET}}
\newcommand{\mmuInstSrcSize}            {\miscSignifier\mmuMod\col{/SOURCE\_SIZE}}
\newcommand{\mmuInstTgtOffset}          {\miscSignifier\mmuMod\col{/TARGET\_OFFSET}}
\newcommand{\mmuInstTgtSize}            {\miscSignifier\mmuMod\col{/TARGET\_SIZE}}
\newcommand{\mmuInstPadBynd}            {\miscSignifier\mmuMod\col{/PAD\_BYND}}
\newcommand{\mmuInstPadUpTo}            {\miscSignifier\mmuMod\col{/PAD\_UPTO}}
\newcommand{\mmuInstStamp}              {\miscSignifier\mmuMod\col{/STAMP}}
\newcommand{\mmuInstWeightedExoSum}     {\miscSignifier\mmuMod\col{/WEIGHTED\_EXO\_FLAG\_SUM}}
\newcommand{\mmuInstCnS}                {\miscSignifier\mmuMod\col{/CN\_S}}
\newcommand{\mmuInstCnT}                {\miscSignifier\mmuMod\col{/CN\_T}}
\newcommand{\mmuInstRefSize}            {\miscSignifier\mmuMod\col{/REF\_SIZE}}
\newcommand{\mmuInstExoIsROM}           {\texttt{exoIsROM}}
\newcommand{\mmuInstExoIsTXCD}          {\texttt{exoIsTXCD}}
\newcommand{\mmuInstExoIsLOG}           {\texttt{exoIsLOGDATA}}
\newcommand{\mmuInstExoIsKECData}       {\texttt{exoIsKECDATA}}
\newcommand{\mmuInstExoIsKECInfo}       {\texttt{exoIsKECINFO}}
\newcommand{\mmuInstExoIsECData}        {\texttt{exoIsECDATA}}
\newcommand{\mmuInstExoIsEXPMODData}    {\texttt{exoIsEXPMODDATA}}
\newcommand{\mmuInstExoIsSHAData}       {\texttt{exoIsSHA2DATA}}
\newcommand{\mmuInstExoIsSHAInfo}       {\texttt{exoIsSHA2INFO}}
\newcommand{\mmuInstExoIsBLAKE}         {\texttt{exoIsBLAKE}}
\newcommand{\mmuInstExoIsRIPEMDInfo}    {\texttt{exoIsRIPEMDDATA}}
\newcommand{\mmuInstExoIsRIPEMDData}    {\texttt{exoIsRIPEMDINFO}}
\newcommand{\mmuInstExoModuleIds}       {\col{MMU\_EXO\_MODULE\_ID\_SUM}}
\newcommand{\mmuInstExoModuleStamp}     {\col{MMU\_EXO\_MODULE\_STAMP}}

% PRECOMPILE_INFO

\newcommand{\counter}                             {\col{COUNTER}}

\newcommand{\ceil}[1]                             {\left\lceil #1 \right\rceil}
\newcommand{\floor}[1]                            {\left\lfloor #1 \right\rfloor}

\newcommand{\shaTwo}                              {\col{SHA2}\flag}
\newcommand{\ripemd}                              {\col{RIPEMD}\flag}
\newcommand{\identity}                            {\col{IDENTITY}\flag}
\newcommand{\modexp}                              {\col{MODEXP}\flag}
\newcommand{\blake}                               {\col{BLAKE2f}\flag}
\newcommand{\gasReturned}                         {\col{GAS\_RETURNED}}
\newcommand{\callDataSize}                        {\col{CALL\_DATA\_SIZE}}
\newcommand{\returnDataSize}                      {\col{RETURN\_DATA\_SIZE}}
\newcommand{\pairingCount}                        {\col{PAIRING\_COUNT}}
\newcommand{\modexpParams}                        {\col{MODEXP\_PARAMS}}
\newcommand{\blakeF}                              {\col{BLAKE\_f}}
\newcommand{\blakeR}                              {\col{BLAKE\_r}}
% \newcommand{\consumedGas}                         {\col{EXEC\_COST}}
\newcommand{\executionCost}                       {\col{EXEC\_COST}}
\newcommand{\success}                             {\col{SUCCESS}}
\newcommand{\providesReturnData}                  {\col{PROVIDES\_RETURN\_DATA}}
\newcommand{\touchesRam}                          {\col{TOUCHES\_RAM}}
\newcommand{\malformedData}                       {\col{MALFORMED\_DATA}}
\newcommand{\enoughGas}                           {\col{ENOUGH\_GAS}}
\newcommand{\callDataWords}                       {\col{CALL\_DATA\_WORDS}}
\newcommand{\ecDataChecksPassed}                  {\col{EC\_DATA\_CHECKS\_PASSED}}
\newcommand{\modexpBytes}                         {\col{MODEXP\_BYTES}}
\newcommand{\modexpByteAcc}                       {\col{MODEXP\_BYTE\_ACC}}
\newcommand{\modexpByteSwitch}                    {\col{MODEXP\_BYTE\_SWITCH}}
\newcommand{\modexpByteSwitchIndex}               {\col{MODEXP\_BYTE\_SWITCH\_INDEX}}
\newcommand{\modexpELeadingWordFirstByte}         {\col{MODEXP\_E\_LEADING\_WORD\_FIRST\_BYTE}}
\newcommand{\modexpBits}                          {\col{MODEXP\_BITS}}
\newcommand{\modexpBitAcc}                        {\col{MODEXP\_BIT\_ACC}}
\newcommand{\modexpBitSwitch}                     {\col{MODEXP\_BIT\_SWITCH}}
\newcommand{\modexpBitSwitchIndex}                {\col{MODEXP\_BIT\_SWITCH\_INDEX}}
\newcommand{\modexpELeadingWordBitLength}         {\col{MODEXP\_E\_LEADING\_WORD\_BIT\_LENGTH}}
\newcommand{\modexpELeadingWordLog}               {\col{MODEXP\_E\_LEADING\_WORD\_LOG}}
\newcommand{\modexpLEPrime}                       {\col{MODEXP\_LE\_PRIME}}
\newcommand{\modexpMaxLEPrimeAndOne}              {\col{MODEXP\_MAX\_LE\_PRIME\_AND\_1}}
\newcommand{\modexpBigFraction}                   {\col{MODEXP\_BIG\_FRACTION}}
\newcommand{\ecdsaRecoverWorked}                  {\col{ECDSA\_RECOVER\_WORKED}}
\newcommand{\requiresEcData}                      {\col{REQUIRES\_EC\_DATA}}

\newcommand{\modArgOneLo}                         {\col{MOD\_ARG1\_LO}}
\newcommand{\modArgTwoLo}                         {\col{MOD\_ARG2\_LO}}
\newcommand{\modRes}                              {\col{MOD\_RES}}

\newcommand{\GQuadDivisor}                        {G_{\text{quaddivisor}}}
\newcommand{\GQuadDivisorValue}                   {3}
\newcommand{\cycleModexp}                         {\redm{15}}
\newcommand{\cycleNotModexp}                      {\redm{3}}
\newcommand{\weightedPhaseFlagSum}                {\col{phase\_sum}}
\newcommand{\indexMaxFlagSum}                     {\col{index\_max\_sum}}
\newcommand{\flagSum}                             {\col{flag\_sum}}
\newcommand{\weightedFlagSum}                     {\col{wght\_sum}}
\newcommand{\weightedFlagSumInst}                 {\weightedFlagSum\col{\_inst}}
\newcommand{\weightedPrcFlagSum}                  {\weightedFlagSum\col{\_prc}}
\newcommand{\weightedPrcFlagSumCommon}            {\weightedPrcFlagSum\col{\_common}}
\newcommand{\weightedPrcFlagSumBlake}             {\weightedPrcFlagSum\col{\_blake}}
\newcommand{\weightedPrcFlagSumModexp}            {\weightedPrcFlagSum\col{\_modexp}}
\newcommand{\maxCtFlagSum}                        {\col{ct\_max\_sum}}
\newcommand{\maxCtFlagSumInst}                    {\maxCtFlagSum\col{\_inst}}
\newcommand{\maxCtFlagSumPrc}                     {\maxCtFlagSum\col{\_prc}}
\newcommand{\maxCtFlagSumPrcCommon}               {\maxCtFlagSumPrc\col{\_common}}
\newcommand{\maxCtFlagSumPrcBlake}                {\maxCtFlagSumPrc\col{\_blake}}
\newcommand{\maxCtFlagSumPrcModexp}               {\maxCtFlagSumPrc\col{\_modexp}}
